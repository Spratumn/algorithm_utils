from scipy.optimize import linear_sum_assignment
import numpy as np

from munkres import munkres


def assignment(func, cost, cost_thresh=-1):
    h, w = cost.shape

    matches, unmatched_rows, unmatched_cols = [], [], []

    rows, cols = func(cost)
    print(rows)
    print(cols)

    unmatched_rows.extend(row for row in range(h) if row not in rows)
    unmatched_cols.extend(col for col in range(w) if col not in cols)
    for row, col in zip(rows, cols):
        if cost_thresh != -1 and cost[row, col] > cost_thresh:
            unmatched_rows.append(row)
            unmatched_cols.append(col)
        else:
            matches.append((row, col))

    return matches, unmatched_rows, unmatched_cols



if __name__ == '__main__':
    inputs = [51.633858, 51.788815, 0.055608, 51.517979, 1.171808, 2.208923, 2.145994, 51.606323, 51.476585, 51.661472, 51.672253, 2.176845, 51.808018, 51.645569, 51.757603, 1.914840, 1.891595, 51.788715, 51.908566, 51.798458, 51.805908, 51.826439, 51.793552, 51.565987, 51.914181, 101.957603,
            0.212334, 2.192702, 51.632282, 51.894066, 51.815029, 51.953838, 51.948666, 51.920258, 51.928841, 51.938358, 51.945572, 51.942356, 2.097902, 51.945560, 51.967064, 51.905407, 51.858635, 51.935123, 51.907429, 51.975594, 51.974960, 51.971054, 51.967110, 51.936104, 51.897301, 101.990967,
            2.190623, 0.194236, 51.789024, 51.949543, 51.917938, 51.953701, 51.950096, 51.960140, 51.958447, 51.966648, 51.966808, 51.942017, 1.919971, 51.969051, 51.964443, 51.951515, 51.940460, 51.956982, 51.815605, 51.973446, 51.971970, 51.981461, 51.980728, 51.964180, 51.847679, 101.985237,
            51.891727, 51.947491, 51.519066, 0.128222, 2.152353, 51.959599, 51.958290, 1.372509, 1.577726, 2.147022, 1.679219, 51.961060, 51.894382, 2.135803, 51.975174, 1.491762, 1.599816, 51.765953, 51.971394, 51.977192, 51.979923, 51.904285, 51.888359, 1.131489, 51.965759, 101.977966,
            2.085788, 1.893540, 51.805843, 51.891209, 51.849346, 51.906387, 51.891998, 51.904427, 51.897079, 51.916153, 51.914577, 51.886406, 0.063732, 51.915295, 51.911282, 51.884476, 51.872471, 51.925663, 1.676459, 51.926640, 51.924683, 51.938335, 51.936321, 51.904907, 1.775162, 101.919434,
            51.953342, 51.954536, 2.207920, 51.963490, 51.923424, 0.209150, 1.428024, 51.971729, 51.960182, 51.974556, 51.968006, 1.722494, 51.908237, 51.975235, 1.393995, 51.961010, 51.959274, 51.936714, 51.981522, 1.854986, 1.747932, 51.983429, 51.986099, 51.971081, 51.973305, 101.995079,
            51.918388, 51.958984, 51.612881, 1.449240, 51.786243, 51.969360, 51.968727, 0.181695, 2.167708, 1.461558, 1.203549, 51.970264, 51.907642, 1.192438, 51.982246, 2.044403, 2.216444, 2.166108, 51.976418, 51.984108, 51.985939, 51.879902, 51.857895, 1.474580, 51.970638, 101.974960,
            51.927624, 51.957825, 51.493584, 1.629940, 2.274388, 51.956898, 51.956657, 2.195145, 0.259828, 51.716122, 2.029401, 51.959709, 51.900692, 2.094323, 51.977680, 1.344262, 1.539835, 51.734459, 51.977264, 51.979588, 51.982624, 51.894955, 51.836624, 1.542476, 51.970016, 101.988235,
            51.858795, 51.939220, 1.899887, 1.555408, 1.831931, 51.956055, 51.957417, 2.192605, 1.490605, 51.818153, 2.311917, 51.960720, 51.876850, 2.328895, 51.975323, 0.884099, 0.177569, 51.842602, 51.969383, 51.976330, 51.979805, 51.943661, 51.935543, 2.219718, 51.962475, 101.985809,
            51.935307, 51.965034, 51.664040, 2.167764, 51.856430, 51.971771, 51.970409, 1.508750, 51.671177, 0.128894, 1.666433, 51.971725, 51.918476, 1.117767, 51.983440, 51.745037, 51.824379, 1.531978, 51.978951, 51.985489, 51.987053, 2.301019, 51.756527, 1.979225, 51.973602, 101.962288,
            51.938583, 51.940472, 2.178370, 51.962803, 51.931511, 1.709610, 1.172539, 51.970688, 51.959679, 51.972889, 51.965752, 0.110461, 51.888443, 51.974018, 1.845370, 51.962204, 51.960907, 51.922676, 51.978764, 2.403407, 2.380878, 51.981770, 51.985191, 51.970577, 51.969059, 101.995773,
            51.898281, 51.947655, 1.913596, 1.539469, 2.107822, 51.954109, 51.954628, 2.020465, 1.219915, 51.716576, 2.243288, 51.958168, 51.887585, 2.246636, 51.974846, 0.180271, 0.990292, 51.807739, 51.972927, 51.976276, 51.979805, 51.928036, 51.910049, 2.066375, 51.965759, 101.987015,
            51.972363, 51.970562, 51.803032, 51.980812, 51.959347, 1.745860, 2.299167, 51.985981, 51.982071, 51.987534, 51.985130, 2.379196, 51.926174, 51.989090, 1.833894, 51.982224, 51.979641, 51.963615, 51.987923, 1.463845, 0.174833, 51.993877, 51.994785, 51.987396, 51.980186, 101.997917,
            51.963997, 51.963001, 51.753708, 51.976170, 51.951946, 1.332813, 1.676167, 51.982265, 51.976978, 51.984009, 51.980633, 1.848341, 51.913193, 51.985771, 0.159415, 51.977657, 51.975044, 51.952103, 51.985455, 1.904748, 1.822671, 51.991566, 51.992939, 51.983715, 51.976765, 101.997559,
            51.972900, 51.971882, 51.794842, 51.978081, 51.949337, 1.804902, 2.365516, 51.984062, 51.978863, 51.985928, 51.982956, 2.399930, 51.927887, 51.987457, 1.905144, 51.978851, 51.976021, 51.960052, 51.987850, 0.130143, 1.412505, 51.992912, 51.993977, 51.985298, 51.980320, 101.997589,
            51.943726, 51.967876, 51.663937, 2.171462, 51.874935, 51.971905, 51.971378, 1.308345, 2.053558, 1.247944, 1.113353, 51.972580, 51.918488, 0.270270, 51.985184, 2.285785, 2.340698, 2.014386, 51.980881, 51.987041, 51.988636, 51.830284, 51.755646, 1.627044, 51.974762, 101.977692,
            51.934155, 51.963608, 51.575417, 1.214204, 51.826481, 51.969303, 51.970200, 1.498834, 1.475000, 2.019834, 1.333685, 51.971565, 51.907917, 1.543447, 51.984901, 2.129438, 2.243189, 2.198460, 51.979450, 51.986450, 51.988350, 51.901455, 51.865833, 0.145183, 51.972469, 101.986282,
            51.981903, 51.981194, 51.832199, 51.978970, 51.925373, 2.412743, 51.959221, 51.985577, 51.979599, 51.987701, 51.984856, 51.962917, 51.943768, 51.989155, 2.459242, 51.978611, 51.974926, 51.965313, 51.990772, 2.053706, 2.421755, 51.994503, 51.995316, 51.986729, 51.984505, 101.997917,
            51.931351, 51.954292, 51.786575, 51.761345, 51.868427, 51.931717, 51.911270, 2.160553, 51.734959, 1.511227, 2.037729, 51.918159, 51.926308, 2.019439, 51.948898, 51.806519, 51.838402, 0.144528, 51.970943, 51.957222, 51.960876, 1.779744, 2.068079, 2.191421, 51.968750, 101.883331,
            51.944504, 51.966534, 51.678890, 1.717204, 51.873043, 51.966080, 51.964294, 1.249874, 2.092463, 1.719518, 0.200494, 51.966209, 51.917526, 1.268009, 51.981590, 2.278974, 2.327256, 2.031136, 51.980339, 51.983913, 51.985920, 51.801098, 51.776138, 1.402896, 51.974182, 101.980675,
            51.967335, 51.979561, 51.826405, 51.904545, 51.945709, 51.979961, 51.979046, 51.877731, 51.892944, 2.299930, 51.804745, 51.979549, 51.939690, 51.837067, 51.990307, 51.931561, 51.941288, 1.752823, 51.986553, 51.991936, 51.992905, 0.252287, 1.510370, 51.893147, 51.981316, 101.957550,
            51.981087, 51.980560, 51.823284, 51.977356, 51.916813, 2.405205, 2.456153, 51.984463, 51.977745, 51.986759, 51.983593, 51.959862, 51.942215, 51.988243, 2.453039, 51.976662, 51.972790, 51.962738, 51.990425, 2.029583, 2.046187, 51.993996, 51.994896, 51.985569, 51.984035, 101.997787,
            51.944649, 51.948212, 2.141366, 51.959751, 2.419844, 1.400978, 0.068371, 51.968735, 51.955872, 51.971279, 51.963226, 1.153846, 51.894272, 51.972454, 1.654982, 51.958496, 51.956963, 51.916161, 51.979939, 2.365760, 2.294538, 51.981033, 51.984737, 51.968472, 51.970547, 101.995773]
    cost_matrix = np.array(inputs).reshape(23, 26)[:,:]

    # matches, unmatched_rows, unmatched_cols = assignment(linear_sum_assignment, cost_matrix, cost_thresh=-1)
    matches, unmatched_rows, unmatched_cols = assignment(munkres, cost_matrix, cost_thresh=-1)

    sum_cost = 0
    for (row, col) in matches:
        print(cost_matrix[row, col], end=', ')
        sum_cost += cost_matrix[row, col]
    print('sum =', sum_cost)

    print('unmatched rows: ', unmatched_rows)
    print('unmatched cols: ', unmatched_cols)